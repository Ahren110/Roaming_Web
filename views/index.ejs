<!doctype html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no, width=device-width">
    <title>定位及周边</title>
    <script type="text/javascript" src="http://webapi.amap.com/maps?v=1.3&key=8586fcc2621fba3c4a64a1a804a6e380"></script>
    <script type="text/javascript" src="http://cache.amap.com/lbs/static/addToolbar.js"></script>
    <script type="text/javascript" src="javascripts/jquery-2.2.1.min.js"></script>
    <script type="text/javascript" src="javascripts/jquery.json.js"></script>
    <script type="text/javascript" src="javascripts/hammer.js"></script>
    <!-- 语音转文字 -->
    <script src="http://blog.faultylabs.com/files/md5.js"></script> 
    <script src="http://webapi.openspeech.cn/socket.io/socket.io.js"></script>
    <script src='http://webapi.openspeech.cn/js/util/zepto.min.js'></script>
    <script src='http://webapi.openspeech.cn/js/util/jwav.min.js'></script>
    <script src='http://webapi.openspeech.cn/fingerprint.js'></script>
    <script src="http://webapi.openspeech.cn/iat.min.js"></script>
    <!-- 文字转语音 -->
    <script src="http://webapi.openspeech.cn/tts.min.js"></script>
    
<body>
<div id='container'>
    <div id="tip"></div>
    <div id="panel"></div>
</div>
<div id="content">
    
</div>
<div>
    <textarea id="result"></textarea>
    <input type="button" value="录音" onclick="start();"  />
    <input type="button" value="结束" onclick="stop();"  />
</div>

<script type="text/javascript">
    init();

    var map, geolocation;
            //加载地图，调用浏览器定位服务
    map = new AMap.Map('container', {
        resizeEnable: true
    });

    //控制显示初始化
    function init(){

        $("#panel").hide();
        $("#tip").hide();

        $('#content').width(screen.width);
        $('#content').height(screen.height);

        var view = document.getElementById('content');
        var mc = new Hammer(view);
        mc.get('pan').set({direction: Hammer.DIRECTION_ALL});

        //左滑事件
        mc.on("swipeleft",function(ev){
            console.log("左滑事件");
            
            map.plugin('AMap.Geolocation', function() {
                geolocation = new AMap.Geolocation({
                    enableHighAccuracy: true,
                    //是否使用高精度定位，默认:true
                    timeout: 10000,          
                    //超过10秒后停止定位，默认：无穷大
                    buttonOffset: new AMap.Pixel(10, 20),
                    //定位按钮与设置的停靠位置的偏移量，默认：Pixel(10, 20)
                    zoomToAccuracy: true,      
                    //定位成功后调整地图视野范围使定位位置及精度范围视野内可见
                    buttonPosition:'RB'
                });
                map.addControl(geolocation);
                geolocation.getCurrentPosition();
                AMap.event.addListener(geolocation, 'complete', getSearch);
                //返回定位信息
                AMap.event.addListener(geolocation, 'error', onError);      
                //返回定位出错信息

                
            });    
        });

        //右滑事件
        mc.on("swiperight",function(ev){
            console.log("右滑事件");
            map.plugin('AMap.Geolocation', function() {
                geolocation = new AMap.Geolocation({
                    enableHighAccuracy: true,
                    //是否使用高精度定位，默认:true
                    timeout: 10000,          
                    //超过10秒后停止定位，默认：无穷大
                    buttonOffset: new AMap.Pixel(10, 20),
                    //定位按钮与设置的停靠位置的偏移量，默认：Pixel(10, 20)
                    zoomToAccuracy: true,      
                    //定位成功后调整地图视野范围使定位位置及精度范围视野内可见
                    buttonPosition:'RB'
                });
                map.addControl(geolocation);
                geolocation.getCurrentPosition();
                AMap.event.addListener(geolocation, 'complete', getNavigation);
                //返回定位信息
                AMap.event.addListener(geolocation, 'error', onError);      
                //返回定位出错信息

                
            });    
        });
    }

    function audio(text){
        /**
          * 初始化Session对象
          */
        var session = new IFlyTtsSession({
                                      'url' : 'http://webapi.openspeech.cn/',
                                      'interval' : '30000', 
                                      'disconnect_hint' : 'disconnect',
                                      'sub' : 'tts'
                                 });
        var audio = null;
        
        /**
          * 输入文本，输出语音播放链接 
          * @content 待合成文本(不超过4096字节)
          */
        function play(content) {
            /***********************************************************以下签名过程需根据实际应用信息填入***************************************************/
            // "56f3b3e8"   "8768a3e970020593"
            // 54c88b8d    6a97bfd7fa4531f7
            var appid = "56f3b3e8";                              //应用APPID，在open.voicecloud.cn上申请即可获得
            var timestamp = new Date().toLocaleTimeString();                      //当前时间戳，例new Date().toLocaleTimeString()
            var expires = 60000;                          //签名失效时间，单位:ms，例60000     
            //!!!为避免secretkey泄露，签名函数调用代码建议在服务器上完成
            var signature = faultylabs.MD5(appid + '&' + timestamp + '&' + expires + '&' + "8768a3e970020593");     
           /************************************************************以上签名过程需根据实际应用信息填入**************************************************/
           
            var params = { "params" : "aue = speex-wb;7, ent = intp65,  vcn = vixy,spd = 50, vol = 50, tte = utf8, caller.appid=" + appid + ",timestamp=" + timestamp + ",expires=" + expires, "signature" : signature, "gat" : "mp3"}; 
            session.start(params, content, function (err, obj)
            {
                if(err) {
                    alert("语音合成发生错误，错误代码 ：" + err);
                } else {
                    if(audio != null)
                    {
                        audio.pause();
                    }
                    audio = new Audio();
                    audio.src = '';
                    audio.play();
                    audio.src = "http://webapi.openspeech.cn/" + obj.audio_url;
                    audio.play();
                }
            });
        };
        play(text);
    }

    function getSearch(data){
        var str=['定位成功'];
        str.push('经度：' + data.position.getLng());
        str.push('纬度：' + data.position.getLat());
        str.push('精度：' + data.accuracy + ' 米');
        str.push('是否经过偏移：' + (data.isConverted ? '是' : '否'));
        //document.getElementById('tip').innerHTML = str.join('<br>');
        console.log('经度：' + data.position.getLng()+'纬度：' + data.position.getLat());

        var cpoint = [data.position.getLng(), data.position.getLat()];

        var search = AMap.service(["AMap.PlaceSearch"], function() {
            var placeSearchShop = new AMap.PlaceSearch({ 
                //构造地点查询类
                pageSize: 5,
                type: '购物服务',
                pageIndex: 1,
                city: "028", 
                map: map,
                panel: "panel"
            });

            var placeSearchFood = new AMap.PlaceSearch({ 
                //构造地点查询类
                pageSize: 5,
                type: '餐饮服务',
                pageIndex: 1,
                city: "028", 
                map: map,
                panel: "panel"
            });

            var placeSearchLife = new AMap.PlaceSearch({ 
                //构造地点查询类
                pageSize: 5,
                type: '生活服务',
                pageIndex: 1,
                city: "028", 
                map: map,
                panel: "panel"
            });             

            placeSearchShop.searchNearBy('', cpoint, 500, function(status, result){
                console.log('购物服务:');
                console.log(result.poiList.pois);

                var json = result.poiList.pois;
                var text="";
                for (var one in json)
                {
                    var name = json[one]['name'];
                    var address = json[one]['address'];
                    var textShop = "附近店铺名称为"+":"+ name + ";位于：" + address+".";
                                                                      
                    text+=textShop;
                }
                console.log(text);  
                audio(text);            

            });

            placeSearchFood.searchNearBy('', cpoint, 500, function(status, result){
                console.log('餐饮服务:');
                console.log(result.poiList.pois);

                var json = result.poiList.pois;
                for (var one in json)
                {
                    var name = json[one]['name'];
                    var address = json[one]['address'];
                    var textFood = "附近餐厅名称为" + name + "位置" + address;
                    console.log(textFood);  

                    //audio(textFood);                 
                    
                }             
            });

            placeSearchLife.searchNearBy('', cpoint, 500, function(status, result){
                console.log('生活服务:');
                console.log(result.poiList.pois);

                var json = result.poiList.pois;
                for (var one in json)
                {
                    var name = json[one]['name'];
                    var address = json[one]['address'];
                    var textLife = "附近生活服务名称为" + name + "位置" + address;
                    console.log(textLife);  

                    //audio(textLife);                 
                    
                } 
            });
        });
    }

    function getNavigation(data){
        var str=['定位成功'];
        str.push('经度：' + data.position.getLng());
        str.push('纬度：' + data.position.getLat());
        str.push('精度：' + data.accuracy + ' 米');
        str.push('是否经过偏移：' + (data.isConverted ? '是' : '否'));
        //document.getElementById('tip').innerHTML = str.join('<br>');
        console.log('经度：' + data.position.getLng()+'纬度：' + data.position.getLat());

        var cpoint = [data.position.getLng(), data.position.getLat()];

        var navigation = AMap.service(["AMap.Walking"], function() {
            var MWalk = new AMap.Walking({
                map: map,
                panel: "panel"
            }); 

            /**
              * 初始化Session对象
              */
            var session = new IFlyIatSession({
                                          'url' : 'http://webapi.openspeech.cn/',                           
                                          'reconnection'       : true,
                                          'reconnectionDelay'  : 30000,
                                          'compress' : 'speex',
                                          'speex_path' : 'javascripts/speex.js',              //speex.js本地路径 
                                          'vad_path' : 'javascripts/vad.js',                  //vad.js本地路径
                                          'recorder_path' : 'javascripts/recorderWorker.js'    //recordWorker.js本地路径
                                     });
            
            /**
              * 开启录音并获取识别结果
              */
            function start() {
                /***********************************************************以下签名过程需根据实际应用信息填入***************************************************/
                // "56f3b3e8"   "8768a3e970020593"
                var appid = "56f3b3e8";                              //应用APPID，在open.voicecloud.cn上申请即可获得
                var timestamp = new Date().toLocaleTimeString();;                      //当前时间戳，例new Date().toLocaleTimeString()
                var expires = 60000;                          //签名失效时间，单位:ms，例60000      
                //!!!为避免secretkey泄露，签名函数调用代码建议在服务器上完成
                var secret_key = "8768a3e970020593";

                var signature = faultylabs.MD5(appid + '&' + timestamp + '&' + expires + '&' + secret_key); 
               /************************************************************以上签名过程需根据实际应用信息填入**************************************************/
                var params = {"grammar_list" : null, "params" : "aue=speex-wb;-1, usr = mkchen, ssm = 1, sub = iat, net_type = wifi, ent =sms16k, rst = plain, auf  = audio/L16;rate=16000, vad_enable = 1, vad_timeout = 5000, vad_speech_tail = 500, caller.appid = " + appid + ",timestamp = " + timestamp + ",expires = " + expires, "signature" : signature};
                
                /* 调用开始录音接口，通过function(volume)和function(err, obj)回调音量和识别结果 */

                session.start(params, function (volume)
                {   
                    /* 获取并展示当前录音音量 */           
                    if(volume < 6 && volume > 0)
                        console.log("volume : " + volume);
                        
                    /* 若volume返回负值，说明麦克风启动失败*/
                    if(volume < 0)
                        console.log("麦克风启动失败");
                }, function (err, result)
                {
                    /* 若回调的err为空或错误码为0，则会话成功，可提取识别结果进行显示*/
                    if(err == null || err == undefined || err == 0)
                    {
                        if(result == '' || result == null)
                            document.getElementById('result').innerHTML = "没有获取到识别结果";
                        else
                            document.getElementById('result').innerHTML = result;
                    /* 若回调的err不为空且错误码不为0，则会话失败，可提取错误码 */    
                    } else
                    {
                        document.getElementById('result').innerHTML = 'error code : ' + err + ", error description : " + result;
                    }
                }, function(message)
                {
                    if(message == 'onStop')
                    {
                        console.log("录音停止");
                    } else if(message == 'onEnd')
                    {
                        console.log("会话结束");
                    }
                }, function(data)
                {
                    //console.log(data);
                });         
                
            };
            
            function stop() {
                session.stop(null);
            };

            //构造路线导航类
            //根据起终点坐标规划步行路线
            var desPoint = [104.002191,30.55291];
            //按照关键词搜索
            //walking.search([{keyword:'北京市地震局(公交站)',city:'北京'},{keyword:'望京西园4区',city:'北京'}], function(status, result)
            MWalk.search(cpoint, desPoint, function(status, result){
                    console.log(result.routes);

                    var json = result.routes;
                    for (var i in json)
                    {
                        var distance = json[i]['distance'];
                        var text = "距离为" + distance + '米'
                        var steps = json[i]['steps'];
                        for (var j in steps)
                        {
                            var instruction = steps[j]['instruction'];
                            text += instruction;
                        }
                        console.log(text);  

                        audio(text);                
                        
                    } 
                return text;  


            });

        });
    }



    //解析定位错误信息
    function onError(data) {
        document.getElementById('tip').innerHTML = '定位失败';
    }

</script>
</body>
</html>



