<!doctype html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no, width=device-width">
    <title>定位及周边</title>
    <script type="text/javascript" src="http://webapi.amap.com/maps?v=1.3&key=8586fcc2621fba3c4a64a1a804a6e380"></script>
    <script type="text/javascript" src="http://cache.amap.com/lbs/static/addToolbar.js"></script>
    <script type="text/javascript" src="/javascripts/jquery-2.2.1.min.js"></script>
    <script type="text/javascript" src="/javascripts/jquery.json.js"></script>
    <script type="text/javascript" src="/javascripts/hammer.min.js"></script>
    <script type="text/javascript" src="/javascripts/jquery.hammer.js"></script>
    
<body>
<div id='container'>
    <div id="tip"></div>
    <div id="panel"></div>
    <div class="json"></div> 
</div>
<div id="draw">
    <input type="button" title="开启摄像头" value="开启摄像头" onclick="getMedia();" />
    <br />  
    <video height="120px" autoplay="autoplay"></video>
    <hr />  
    <input type="button" title="视频" value="视频" onclick="getVedio();" />
    <br />  
    <canvas id="canvas2" height="240px"></canvas> 
</div>
<script type="text/javascript">
    var map, geolocation;
    //加载地图，调用浏览器定位服务
    map = new AMap.Map('container', {
        resizeEnable: true
    });
    map.plugin('AMap.Geolocation', function() {
        geolocation = new AMap.Geolocation({
            enableHighAccuracy: true,
            //是否使用高精度定位，默认:true
            timeout: 10000,          
            //超过10秒后停止定位，默认：无穷大
            buttonOffset: new AMap.Pixel(10, 20),
            //定位按钮与设置的停靠位置的偏移量，默认：Pixel(10, 20)
            zoomToAccuracy: true,      
            //定位成功后调整地图视野范围使定位位置及精度范围视野内可见
            buttonPosition:'RB'
        });
        map.addControl(geolocation);
        geolocation.getCurrentPosition();
        AMap.event.addListener(geolocation, 'complete', onComplete);
        //返回定位信息
        AMap.event.addListener(geolocation, 'error', onError);      
        //返回定位出错信息

        
    });

    //解析定位结果
    function onComplete(data) {
        var str=['定位成功'];
        str.push('经度：' + data.position.getLng());
        str.push('纬度：' + data.position.getLat());
        str.push('精度：' + data.accuracy + ' 米');
        str.push('是否经过偏移：' + (data.isConverted ? '是' : '否'));
        document.getElementById('tip').innerHTML = str.join('<br>');
        console.log('经度：' + data.position.getLng()+'纬度：' + data.position.getLat());

        var cpoint = [data.position.getLng(), data.position.getLat()];

        AMap.service(["AMap.PlaceSearch"], function() {
            var placeSearchShop = new AMap.PlaceSearch({ 
                //构造地点查询类
                pageSize: 5,
                type: '购物服务',
                pageIndex: 1,
                city: "028", 
                map: map,
                panel: "panel"
            });

            var placeSearchFood = new AMap.PlaceSearch({ 
                //构造地点查询类
                pageSize: 5,
                type: '餐饮服务',
                pageIndex: 1,
                city: "028", 
                map: map,
                panel: "panel"
            });

            var placeSearchLife = new AMap.PlaceSearch({ 
                //构造地点查询类
                pageSize: 5,
                type: '生活服务',
                pageIndex: 1,
                city: "028", 
                map: map,
                panel: "panel"
            });             

            placeSearchShop.searchNearBy('', cpoint, 500, function(status, result){
                console.log('购物服务:');
                console.log(result.poiList.pois);

                var jsonIn = $.toJSON( result.poiList.pois );
                var json = result.poiList.pois;
                $(".json").append(jsonIn);

                for (var one in json)
                {
                    var name = json[one]['name'];
                    var address = json[one]['address'];
                    var text = "附近店铺名称为" + name + "位置" + address;
                    console.log(text);  

                    //语音
                    var u = new SpeechSynthesisUtterance();
                    u.text = text;
                    u.lang = 'zh-CN';
                    u.rate = 1.2;
                    u.onend = function(event) { 
                        console.log('Finished in ' + event.elapsedTime + ' seconds.'); 
                    }
                    speechSynthesis.speak(u);                 
                    
                }               

            });

            placeSearchFood.searchNearBy('', cpoint, 500, function(status, result){
                console.log('餐饮服务:');
                console.log(result.poiList.pois);

                var jsonIn = $.toJSON( result.poiList.pois );
                $(".json").append(jsonIn);

                var json = result.poiList.pois;
                for (var one in json)
                {
                    var name = json[one]['name'];
                    var address = json[one]['address'];
                    var text = "附近餐厅名称为" + name + "位置" + address;
                    console.log(text);  

                    //语音
                    var u = new SpeechSynthesisUtterance();
                    u.text = text;
                    u.lang = 'zh-CN';
                    u.rate = 1.2;
                    u.onend = function(event) { 
                        console.log('Finished in ' + event.elapsedTime + ' seconds.'); 
                    }
                    //speechSynthesis.speak(u);                 
                    
                }               

            });

            placeSearchLife.searchNearBy('', cpoint, 500, function(status, result){
                console.log('生活服务:');
                console.log(result.poiList.pois);
                
                var jsonIn = $.toJSON( result.poiList.pois );
                $(".json").append(jsonIn);

                var json = result.poiList.pois;
                for (var one in json)
                {
                    var name = json[one]['name'];
                    var address = json[one]['address'];
                    var text = "附近生活服务名称为" + name + "位置" + address;
                    console.log(text);  

                    //语音
                    var u = new SpeechSynthesisUtterance();
                    u.text = text;
                    u.lang = 'zh-CN';
                    u.rate = 1.2;
                    u.onend = function(event) { 
                        console.log('Finished in ' + event.elapsedTime + ' seconds.'); 
                    }
                    //speechSynthesis.speak(u);                 
                    
                }   
            });
        });

        //步行导航
        AMap.service(["AMap.Walking"], function() {
            var MWalk = new AMap.Walking({
                map: map,
                panel: "panel"
            }); 

            //构造路线导航类
            //根据起终点坐标规划步行路线
            var desPoint = [104.002191,30.55291];
            //按照关键词搜索
            //walking.search([{keyword:'北京市地震局(公交站)',city:'北京'},{keyword:'望京西园4区',city:'北京'}], function(status, result)
            MWalk.search(cpoint, desPoint, function(status, result){
                    console.log(result.routes);

                    var json = result.routes;
                    for (var i in json)
                    {
                        var distance = json[i]['distance'];
                        var text = "距离为" + distance + '米'
                        var steps = json[i]['steps'];
                        for (var j in steps)
                        {
                            var instruction = steps[j]['instruction'];
                            text += instruction;
                        }
                        console.log(text);  

                        //语音
                        var u = new SpeechSynthesisUtterance();
                        u.text = text;
                        u.lang = 'zh-CN';
                        u.rate = 1.2;
                        u.onend = function(event) { 
                            console.log('Finished in ' + event.elapsedTime + ' seconds.'); 
                        }
                        //speechSynthesis.speak(u);                 
                        
                    }   


            });
        });
    }

    //解析定位错误信息
    function onError(data) {
        document.getElementById('tip').innerHTML = '定位失败';
    }

    $("#panel").hide();
    $("#tip").hide();
    $(".json").hide();


    var hammertime = $('#container').hammer();

    hammertime.on('swift', function(ev) {

            console.log(ev);

    });

     var video = document.querySelector('video');  
        var audio, audioType;  
  
        var canvas2 = document.getElementById('canvas2');  
        var context2 = canvas2.getContext('2d');  
  
        navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;  
        window.URL = window.URL || window.webkitURL || window.mozURL || window.msURL;  
  
        var exArray = []; //存储设备源ID  
        MediaStreamTrack.getSources(function (sourceInfos) {  
            for (var i = 0; i != sourceInfos.length; ++i) {  
                var sourceInfo = sourceInfos[i];  
                //这里会遍历audio,video，所以要加以区分  
                if (sourceInfo.kind === 'video') {  
                    exArray.push(sourceInfo.id);  
                }  
            }  
        });

        function getMedia() {  
            if (navigator.getUserMedia) {  
                navigator.getUserMedia({  
                    'video': {  
                        'optional': [{  
                            'sourceId': exArray[1] //0为前置摄像头，1为后置  
                        }]  
                    },  
                    'audio':true  
                }, successFunc, errorFunc);    //success是获取成功的回调函数  
            }  
            else {  
                alert('Native device media streaming (getUserMedia) not supported in this browser.');  
            }  
        }  
  
        function successFunc(stream) {  
            //alert('Succeed to get media!');  
            if (video.mozSrcObject !== undefined) {  
                //Firefox中，video.mozSrcObject最初为null，而不是未定义的，我们可以靠这个来检测Firefox的支持  
                video.mozSrcObject = stream;  
            }  
            else {  
                video.src = window.URL && window.URL.createObjectURL(stream) || stream;  
            }  
  
            // 音频  
            audio = new Audio();  
            audioType = getAudioType(audio);  
            if (audioType) {  
                audio.src = 'polaroid.' + audioType;  
                audio.play();  
            }  
        }  
        function errorFunc(e) {  
            alert('Error！'+e);  
        }  
  
          
        // 将视频帧绘制到Canvas对象上,Canvas每60ms切换帧，形成肉眼视频效果  
        function drawVideoAtCanvas(video,context) {  
            window.setInterval(function () {  
                context.drawImage(video, 0, 0,180,240); //将图像画到画布上
                transformImg(100);  //将画布上的图像转换成二值图像，阈值为100
            }, 60);  
        }

        function transformImg(threshold){
            var length = canvas2.width * canvas2.height;
            //获取图像中所有像素
            imageData = context2.getImageData(0,0,canvas2.width,canvas2.height);
            //循环遍历imageData对象中的data属性，得到各像素的rgba值
            for(var i=0;i<length * 4;i += 4){
                var myRed = imageData.data[i];
                var myGreen = imageData.data[i+1];
                var myBlue = imageData.data[i+2];
                myGary= parseInt((myRed+myGreen+myBlue) / 3);
                myGary=myGary>threshold?255:0;
                imageData.data[i] = myGary;
                imageData.data[i+1] = myGary;
                imageData.data[i+2] = myGary;
            }
            //将经过像素处理过的图像重新绘制在canvas元素中
            context2.putImageData(imageData,0,0);
        }  
  
        //获取音频格式  
        function getAudioType(element) {  
            if (element.canPlayType) {  
                if (element.canPlayType('audio/mp4; codecs="mp4a.40.5"') !== '') {  
                    return ('aac');  
                } else if (element.canPlayType('audio/ogg; codecs="vorbis"') !== '') {  
                    return ("ogg");  
                }  
            }  
            return false;  
        }  
  
        // vedio播放时触发，绘制vedio帧图像到canvas  
        //video.addEventListener('play', function () {  
        //drawVideoAtCanvas(video, context2);  
        //}, false);  
  
        //视频  
        function getVedio() {  
            drawVideoAtCanvas(video, context2);  
        } 


   

</script>
</body>
</html>

